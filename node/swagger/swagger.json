{
    "swagger": "2.0",
    "info": {
        "description": "Documenting API BattleTime with Swagger.",
        "version": "0.2.0",
        "title": "API Documented"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "tags": [{
            "name": "Auth",
            "description": "User authentication"
        },
        {
            "name": "Users",
            "description": "User operations"
        },
        {
            "name": "Roles",
            "description": "Role operations"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/auth": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate the user and generate the Token",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                        "name": "email",
                        "in": "formData",
                        "description": "Email",
                        "default": "admin@gmail.com",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Password",
                        "default": "123123",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "I login successfully"
                    },
                    "400": {
                        "description": "The request was unsuccessful or Parameters are inconsistent"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "403": {
                        "description": "Email or Password invalid"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/auth_identification_number": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate the user by dni and generate the Token",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                        "name": "identification_number",
                        "in": "formData",
                        "description": "Identification number",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "I login successfully"
                    },
                    "422": {
                        "description": "There is already a user with that ID"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/users/admin": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns all users",
                "description": "",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Returns all users"
                    },
                    "400": {
                        "description": "The request was unsuccessful or Parameters are inconsistent"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/users/occupations": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns all occupations",
                "description": "",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Returns all occupations"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/users/study_levels": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns all study levels",
                "description": "",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Returns all study levels"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register User",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "identification_number",
                        "in": "formData",
                        "description": "Identification number",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lastname",
                        "in": "formData",
                        "description": "Lastname",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registered user successfully"
                    },
                    "400": {
                        "description": "Failed to register user"
                    }
                }
            }
        },
        "/users/password": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit password",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "currentPassword",
                        "in": "formData",
                        "description": "Current password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "in": "formData",
                        "description": "New password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The password was successfully modified"
                    },
                    "400": {
                        "description": "The request was not successful or The user with this ID does not exist"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/users/user": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "name",
                        "in": "formData",
                        "description": "Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname",
                        "in": "formData",
                        "description": "Lastname",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "description": "Phone",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user was created successfully"
                    },
                    "400": {
                        "description": "The request was not successful or The user with this ID does not exist"
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            },
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User By Token",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "User successfully found"
                    },
                    "400": {
                        "description": "The request was not successful or The user with this ID does not exist"
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit user by ID",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],

                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname",
                        "in": "formData",
                        "description": "Lastname",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully modified"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "404": {
                        "description": "We have not found a user with that ID"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/users/user/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Return a user by ID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of user",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "User successfully found"
                    },
                    "404": {
                        "description": "We have not found a user with that ID"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/users/identification/{identification_number}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Return a user by identification number",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "identification_number",
                    "in": "path",
                    "description": "Identification number",
                    "required": true,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "User successfully found"
                    },
                    "404": {
                        "description": "We have not found a User with that identification number"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/users/image_identification": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Change front and bakc identification image url",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "front_image",
                    "in": "formData",
                    "description": "Image front identification",
                    "required": true,
                    "type": "file"
                    },
                    {
                        "name": "back_image",
                        "in": "formData",
                        "description": "Image back identification",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/recover_password": {
            "post": {
                "tags": [
                    "Restore Password"
                ],
                "summary": "Send Email",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "email",
                    "in": "formData",
                    "description": "Email",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "The email was sent successfully"
                    },
                    "400": {
                        "description": "Email not sent"
                    }

                }
            }
        },
        "/restore_password/{token}": {
            "get": {
                "tags": [
                    "Restore Password"
                ],
                "summary": "Validate the token and show the window to change the password",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "token",
                    "in": "path",
                    "description": "User token",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "The token is valid"
                    },
                    "404": {
                        "description": "The token is not valid"
                    }
                }
            },
            "put": {
                "tags": [
                    "Restore Password"
                ],
                "summary": "Edit password to recover user",
                "description": "",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],

                "parameters": [{
                        "name": "token",
                        "in": "path",
                        "description": "User token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "New Password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The password was successfully modified"
                    },
                    "401": {
                        "description": "The token expired"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/avatar": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a user's avatar",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User successfully modified"
                    },
                    "400": {
                        "description": "The user with this ID does not exist"
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/user/avatar": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit avatar",
                "description": "",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "avatar",
                    "in": "formData",
                    "description": "Avatar file",
                    "required": true,
                    "type": "file"
                }],
                "responses": {
                    "200": {
                        "description": "Avatar was successfully modified"
                    },
                    "400": {
                        "description": "Parameters are missing (file)"
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/user/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Returns the roles",
                "description": "",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "The role was successfully found"
                    },
                    "400": {
                        "description": "The request was not successful"
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/loans": {
            "get": {
                "tags": [
                    "LoanApplication"
                ],
                "summary": "Return a loans",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "LoanApplication successfully found"
                    },
                    "404": {
                        "description": "We have not found a LoanApplication"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/loans/loan": {
            "post": {
                "tags": [
                    "LoanApplication"
                ],
                "summary": "Return a loans",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "bank_id",
                        "in": "formData",
                        "description": "ID of bank",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "cbu",
                        "in": "formData",
                        "description": "CBU",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alias",
                        "in": "formData",
                        "description": "Alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "description": "Amount",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LoanApplication successfully found"
                    },
                    "404": {
                        "description": "We have not found a LoanApplication"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/loans/identification_number/{identification_number}": {
            "get": {
                "tags": [
                    "LoanApplication"
                ],
                "summary": "Return a LoanApplication by identification number",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "identification_number",
                    "in": "path",
                    "description": "Identification number",
                    "required": true,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "LoanApplication successfully found"
                    },
                    "404": {
                        "description": "We have not found a LoanApplication with that identification number"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/loan/info": {
            "get": {
                "tags": [
                    "Loan"
                ],
                "summary": "Return a information Loan",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Loan successfully found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/loans/loan/{id}": {
            "get": {
                "tags": [
                    "LoanApplication"
                ],
                "summary": "Return a LoanApplication by ID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of loan",
                    "required": true,
                    "type": "integer"
                }],
                "responses": {
                    "200": {
                        "description": "LoanApplication successfully found"
                    },
                    "404": {
                        "description": "We have not found a LoanApplication with that ID"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            },
            "put": {
                "tags": [
                    "LoanApplication"
                ],
                "summary": "Return a LoanApplication by ID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "ID of loan",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "bank_id",
                        "in": "formData",
                        "description": "ID of bank",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "cbu",
                        "in": "formData",
                        "description": "CBU",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "alias",
                        "in": "formData",
                        "description": "Alias",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amount",
                        "in": "formData",
                        "description": "Amount",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LoanApplication successfully found"
                    },
                    "404": {
                        "description": "We have not found a LoanApplication with that ID"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/send/email": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Send email",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/verify/email": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Verify email",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verified"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/list/email": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "List emails verified",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Return emails verified"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/send/sms": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Send SMS",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "area_code",
                        "in": "formData",
                        "description": "Area code phone",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "description": "Number phone",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/verify/phone": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Verify phone",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "number",
                        "in": "formData",
                        "description": "Number phone",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verified"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/list/phone": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "List phones verified",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Return phones verified"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [{
                    "auth_token": [
                        "write:user",
                        "read:user"
                    ]
                }]
            }
        },
        "/banks": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Return banks",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Return banks"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/banks/bank/:id": {
            "get": {
                "tags": [
                    "Bank"
                ],
                "summary": "Return bank by ID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return banks"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/quotes/:loan_application_id": {
            "get": {
                "tags": [
                    "Quote"
                ],
                "summary": "Return Quote by Loan Application ID",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "loan_application_id",
                        "in": "path",
                        "description": "Loan Application ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return Quotes"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bank"
                ],
                "summary": "Update Quote",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "loan_application_id",
                        "in": "path",
                        "description": "Loan Application ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "quote",
                        "in": "formData",
                        "description": "number quote",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "payed",
                        "in": "formData",
                        "description": "Payed",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update Quote"
                    },
                    "401": {
                        "description": "Not authorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "auth_token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "Users": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/Roles"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Roles": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Role"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}